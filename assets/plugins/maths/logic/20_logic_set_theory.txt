<h1>La théorie des ensembles</h1>



<h2>Qu'est ce qu'est la théorie des ensembles ?</h2>

<h3>La base de la théorie</h3>
<p>
L'idée de la théorie des ensembles, comme introduite par Georg Cantor à la fin du 19ème siècle, est de proposer un fondement solide aux mathématiques.
<important>Elle représente l'étude d'objets mathématiques, nommés des ensembles</important>.
De manière parfaitement intuitive, <important>un ensemble représente un... ensemble d'éléments</important>.
Si un élément se trouve dans un ensemble, on dit que cet élément appartient à l'ensemble : c'est la relation (élément - ensemble) d'appartenance.
Cependant, il est aussi possible de définir un ensemble sans aucun élément, nommée un ensemble vide.
De plus, <important>dans certains cas, un objet ressemblant à un ensemble (contenant d'autres objets mathématiques) ne peut pas appartenir à un autre ensemble : il s'agit dans ce cas d'une classe</important>.
</p>
<p>
Nous pouvons faire pas mal d'opérations basiques avec ces ensembles.
<important>Si TOUS les éléments d'un ensemble A appartiennent à un autre ensemble B, alors on dit que A est inclu dans B</important>.
La réciproque n'est pas vraie : l'ensemble des nombres premiers est inclu dans l'ensemble des nombres (tous les nombres premiers sont des nombres), mais l'ensemble des nombres n'est pas inclu dans l'ensemble des nombres premiers (8 est un nombre, mais n'est pas premier).
Dans ce cas, nous pouvons dire que A est un sous-ensemble (ou une partie) de A.
D'ailleurs, il ne faut pas confondre l'inclusion et l'appartenance : un élément appartient à un ensemble, et un ensemble est inclu dans un autre ensemble (ils partagent des éléments en commun).
</p>
<p>
En théorie des ensembles, <important>l'axiomatisation la plus utilisée est l'axiomatisation Zermelo - Fraenkel; abrégée axiomatisation ZF</important>.
Commençons par les axiomes de Zermelo.
Le premier axiome, l'axiome d'extensionnalité, dit que, si deux ensembles ont les mêmes éléments, ils sont égaux.
Cet axiome assure l'unicité des ensembles.
Le deuxième axiome, l'axiome de paire, indique que l'union des éléments de plusieurs ensembles ne peut contenir un élément x si (et seulement si) x est contenu dans au moins l'un des ensembles formant la paire.
Il implique que la paire de plusieurs ensembles est unique et existe toujours.
Le troisième axiome, l'axiome de la réunion, dit que, pour tous ensembles A constitué intégralement d'ensembles (un ensemble d'ensemble), il existe un autre ensemble contenant l'union des éléments tous les ensembles contenus dans A.
Si vous n'avez pas compris, nous vous encourageons à relire cette phrase lentement, et faire un schéma en même temps (le plus dur est de comprendre la phrase, le concept est tout à fait évident).
Le quatrième axiome, l'axiome de l'ensemble de paires, dit que, pour un ensemble A, il est possible de représenter TOUS les sous-ensembles possibles de A dans un autre ensemble.
Le cinquième axiome, l'axiome de l'infini, assure qu'il est toujours possible d'obtenir une suite d'ensemble pouvant être représente comme la suite des entiers naturels.
En gros, on permet l'existence d'un ensemble correspondant parfaitement à celui des entiers naturels.
Finalement, le dernier axiome, le schéma d'axiome de compréhension, admet que pour un ensemble E et une propriété P pouvant être appliquée sur certains éléments de E, il existe un sous-ensemble de E tel que ses éléments respectent P.
Cependant, ces axiomes sont insuffisants, et il faut en rajouter quelques-uns pour compléter la théorie.
En effet, <important>nous allons généraliser le schéma d'axiome de compréhension si P est une transformation, en admettant l'existence d'un ensemble F, représentant les images (possibles) des valeurs de E après P</important>.
On peut aussi rajouter l'axiome de fondation, garantissant qu'un ensemble E ne peut pas appartenir à un autre ensemble F si E et F ont des éléments (généralement des ensembles) en commun.
Cet axiome permet de dire qu'un ensemble ne peut pas appartenir à lui même, ou à une suite d'ensembles le possédant.
Un dernier axiome (indépendant des autres) est l'axiome du choix.
<important>L'axiome du choix indique qu'il est possible de construire un ensemble à partir de pleins d'autres ensembles X, auquel on choisit un élément (par ensemble) grâce à une fonction quelconque (préalablement définie ou non) nommée fonction de choix</important>.
Cet axiome n'est pas toujours nécessaire.
</p>

<h3>Les ensembles</h3>
<p>
Les ensembles ont beaucoup de propriétés très intéressantes.
</p>
<p>
<important>Si les éléments d'un ensemble sont tous comparables entre eux, l'ensemble est dit ordonné : il s'agit d'une relation dite "d'ordre total" sur l'ensemble</important>.
Dans certains cas (mais pas tous), un ensemble peut avoir un plus petit élément : il est dit bien ordonné.
Ce système de comparaison implique un ordre précis, et distinguable par une syntaxe.
C'est le cas de tous les ensembles de nombres, disposant d'une évidente relation d'ordre entre eux.
Il peut exister un élément dans / or de l'ensemble ordonné tel que tous les autres éléments de l'ensemble sont inférieurs ou égaux à lui : cette élément est appelé un majorant (et oui, il n'est pas nécessairement dans l'ensemble étudié, et il peut en avoir une infinité selon les cas).
Si un des majorants (en général, le plus petit) se trouve dans l'ensemble, ce majorant se nomme borne supérieure.
Dans l'ensemble {1, 2, 3}, 5 est un des majorants, mais 3 est la borne supérieure.
<span class="important">Si tous les sous-ensembles / parties possibles d'un ensemble possède une borne supérieure, alors l'ensemble de départ possède une propriété nommée propriété de la borne supérieure</span>.
C'est par exemple le cas des nombres réels (tous ces sous-ensembles / intervalles possèdent une borne supérieure).
Or, ce n'est pas le cas de l'ensemble des nombres naturel (l'ensemble, par exemple, des carrés de "n" inférieurs à 5 a pour borne supérieure racine de 5, mais n'a que "3" comme plus petit majorant dans N), ni des nombres relatifs et rationnels.
Tout ça dépend énormément du contexte d'utilisation de l'ensemble, mais il en découle des propriétés très intéressante quand même.
</p>
<p>
Si nous pouvons positionner les éléments d'un ensemble bien ordonné via une suite de nombres entiers naturels finie, alors l'ensemble est dit cardinal.
De plus, <span class="important">le terme "cardinal" d'un ensemble est aussi utilisé pour désigner le nombres d'éléments présents dans cet ensemble</span>.
D'ailleurs, ce nombre peut être infini : on parle d'infini dénombrable (l'infini des nombres naturels), noté ℵ0.
Ici, nous utilisons l'opération "positionner les éléments d'un ensemble bien ordonné via une suite de nombres entiers naturels finie" : cela équivaut à dire que nous attribuons à chaque élément d'un ensemble un unique nombre entier naturel.
Cela représente une relation précise : l'équipotence.
En effet, <span class="important">deux ensembles A et B sont équipotents si il est possible de lier chaque éléments de A à un unique élément de B (et inversement)</span> (c'est une bijection d'ensemble).
En toute logique, A et B ont donc le même cardinal.
Cela peut créer certaines idées bizarres avec des ensembles infinis (à noter que, dans ces ensembles, le concept de taille d'ensemble ne veut plus rien dire).
Par exemple, l'ensemble des entiers naturels est équipotent à l'ensemble des entiers naturels privés de 0.
En effet, la bijection existe : elle est représentable par la fonction f(x) qui, a tout x appartenant à l'ensemble des entiers naturels, correspond un unique y tel que y = x + 1 : il y a un lien, et donc une équipotence.
Avec cette opération, <span class="important">on peut en déduire que les ensembles (infinis) de nombres entiers naturels, entiers relatifs et nombres rationnels ont le même cardinal (l'ensemble des nombres réels n'a pas le même)</span>.
Ces 4 résultats sont démontrés plus bas.
De manière très (voir même trop) vulgarisée : infini + 1 = infini.
</p>

<table title="Équipotence de N et N*">
<case x=0 y=0 content="0"><case x=1 y=0 content="1"><case x=2 y=0 content="2"><case x=3 y=0 content="3"><case x=4 y=0 content="4"><case x=5 y=0 content="..."><case x=6 y=0 content="x">
<case right_border=0 x=0 y=1 content="|"><case right_border=0 x=1 y=1 content="|"><case right_border=0 x=2 y=1 content="|"><case right_border=0 x=3 y=1 content="|"><case right_border=0 x=4 y=1 content="|"><case right_border=0 x=5 y=1 content="|"><case right_border=0 x=6 y=1 content="|">
<case x=0 y=2 content="1"><case x=1 y=2 content="2"><case x=2 y=2 content="3"><case x=3 y=2 content="4"><case x=4 y=2 content="5"><case x=5 y=2 content="..."><case x=6 y=2 content="x + 1">
</table>

</br>
<table title="Équipotence de N et Z">
<case x=0 y=0 content="0"><case x=1 y=0 content="1"><case x=2 y=0 content="2"><case x=3 y=0 content="3"><case x=4 y=0 content="4"><case x=5 y=0 content="..."><case x=6 y=0 content="2 * k"><case x=7 y=0 content="2 * k + 1">
<case right_border=0 x=0 y=1 content="|"><case right_border=0 x=1 y=1 content="|"><case right_border=0 x=2 y=1 content="|"><case right_border=0 x=3 y=1 content="|"><case right_border=0 x=4 y=1 content="|"><case right_border=0 x=5 y=1 content="|"><case right_border=0 x=6 y=1 content="|"><case right_border=0 x=7 y=1 content="|">
<case x=0 y=2 content="0"><case x=1 y=2 content="-1"><case x=2 y=2 content="1"><case x=3 y=2 content="-2"><case x=4 y=2 content="2"><case x=5 y=2 content="..."><case x=6 y=2 content="k"><case x=7 y=2 content="-k">
</table>

</br>
<table title="Équipotence de N et Q">
<case_plus x=0 y=0>
<tree load="stern_brocot(3)"></tree>
</case_plus>
<case_plus x=0 y=1 max_width=900>
L'arbre de Stern-Borcot démontre l'équipotence entre N et Q+.
L'utilisation de deux arbres (un positif et un négatif) et d'une technique d'attribution pair-positif et impair-négatif démontre l'équipotence entre N et Q.
</case_plus>
</table>

</br>
<table minimum_case_width=100 title="Non équipotence de N et R">
<case x=0 y=0 content="1" color="red"><case x=1 y=0 content="2"><case x=2 y=0 content="3"><case x=3 y=0 content="4"><case x=4 y=0 content="5"><case x=5 y=0 content="...">
<case x=0 y=1 content="5"><case x=1 y=1 content="5" color="red"><case x=2 y=1 content="5"><case x=3 y=1 content="5"><case x=4 y=1 content="5"><case x=5 y=1 content="...">
<case x=0 y=2 content="7"><case x=1 y=2 content="5"><case x=2 y=2 content="2" color="red"><case x=3 y=2 content="3"><case x=4 y=2 content="4"><case x=5 y=2 content="...">
<case x=0 y=3 content="3"><case x=1 y=3 content="1"><case x=2 y=3 content="4"><case x=3 y=3 content="1" color="red"><case x=4 y=3 content="5"><case x=5 y=3 content="...">
<case x=0 y=4 content="2"><case x=1 y=4 content="7"><case x=2 y=4 content="1"><case x=3 y=4 content="5"><case x=4 y=4 content="6" color="red"><case x=5 y=4 content="...">
<case x=0 y=5 content="..."><case x=1 y=5 content="..."><case x=2 y=5 content="..."><case x=3 y=5 content="..."><case x=4 y=5 content="..."><case x=5 y=5 content="..." color="red">
<case_plus max_width=-1 width=6 x=0 y=6>
La tentative d'équipotence entre N et R mène à une configuration des nombres réels sous forme de suite.
Or, nous pouvons trouver des nombres réels qui ne sont pas dans cette suite.
Donc, il n'y a pas équipotence.
</case_plus>
</table>

<p>
Cependant, certains types de comparaisons (défini par l'algèbre des éléments de l'ensemble) combiné à la définition de l'ensemble nécessitent un système de syntaxe particulièrement complexe.
Par exemple, dans le cas d'un ensemble infini de couples (x, y), on définit la comparaison de ses couples comme la comparaison de x, puis y.
Donc, (1, 0) &gt; (0, 10) et (2, 4) &lt; (3, 1).
Or, si x est infini, alors le tri sera compliqué, puisque n'importe quel couple de position un nombre entier sera inférieur à (1, 0), ce qui n'est pas très pratique.
Pour cela, la position x représentera un multiple d'une valeur "ω" de la position du couple.
Donc, la position de (4, 0) sera 4ω, celle de (2, 3) sera de 2ω + 3 et celle de (0, 8) sera 8.
Pour faire le lien avec la notion de cardinal vue plus bas, <span class="important">ω peut représenter le cardinal de l'ensemble (infini) des entiers naturels</span>.
L'addition "ω + x" représente donc "x valeurs après la dernière valeur de (0, a) avec a infini", soit (1, 0).
D'ailleurs, si nous avons à étudier des triplets (x, y, z), alors la position d'un triplet serait "xω² + yω + z". 
<important>Dans ce cas là, l'ensemble est dit ordinal</important>.
L'adaptation de ce que représente le multiple de ω dépend du contexte actuel dans lequel le nombre est utilisé (ici, un exemple évident avec des couples est utilisé).
</p>



<h2>Les opérations ensemblistes</h2>

<h3>Le produit cartésien</h3>
<p>
L'opération basique entre deux ensembles est le produit cartésien.
<span class="important"><definition name="cartesian_product"></span>.
L'exemple le plus simple de produit cartésien est le produit cartésien entre deux ensembles fini dans N (par exemple, {0, 4}).
</p>

<table load="cartesian_product"></table>

<p>Ce concept marche aussi avec les nombres réels, ce qui représente le plan 2D.</p>

<graphic><background_color white><base draw=1 height=3 width=3><form color=light_grey border_color=black polygon=5></graphic>

<p>
Pour créer un plan 3D, il faudrait donc un produit cartésien entre 3 fois l'ensemble des réels, ce qui est possible grâce au produit cartésien fini.
<span class="important"><definition name="cartesian_product_n_fold"></span>.
Appart cela, le concept reste le même.
</p>
<p>
Le produit cartésien peut aussi être généralisé pour une infinité d'ensembles.
<span class="important"><definition name="cartesian_product_infinite"></span>.
Bien que ce concept semble assez similaire à celui du produit cartésien fini, il demande quelques notions plus complexes pour être correctement défini, comme par exemple celle de famille de fonctions.
</p>

<h3>Les applications mathématiques</h3>
<p>
En mathématiques, <span class="important">une application est une relation / lien entre deux ensembles</span>.
Pour être précis, <span class="important">une application relie un élément d'un ensemble vers un (unique) élément d'un autre ensemble</span>.
On appelle "image" un élément du premier ensemble, nommé ensemble de départ, et "antécédent" un élément du deuxième ensemble, nommé ensemble d'arrivée.
Tous les éléments de l'ensemble de départ doivent être liés, mais pas forcément tous les éléments de l'ensemble d'arrivée.
Pour définir correctement ce terme, on doit créer une structure contenant l'ensemble de départ, l'ensemble d'arrivée, et tous les liens entre chaque éléments de ces ensembles.
Si les ensembles de départ et d'arrivée peuvent être définis dans des structures algébriques, alors nous pouvons utiliser le terme de <a href="logic_category_theory">morphisme de structures algébriques</a>.
Dans certains cas, une application peut avoir besoin de plusieurs antécédents, pouvant être contradictoire avec la définition : il faut garder en tête que l'ensemble de départ peut être le produit cartésien de tous les ensembles dans lesquels les antécédents sont contenus, annulant la contradiction.
</p>

<table title="Application de N vers N*">
<case x=0 y=0 content="0"><case x=1 y=0 content="1"><case x=2 y=0 content="2"><case x=3 y=0 content="3"><case x=4 y=0 content="4"><case x=5 y=0 content="..."><case x=6 y=0 content="x">
<case right_border=0 x=0 y=1 content="|"><case right_border=0 x=1 y=1 content="|"><case right_border=0 x=2 y=1 content="|"><case right_border=0 x=3 y=1 content="|"><case right_border=0 x=4 y=1 content="|"><case right_border=0 x=5 y=1 content="|"><case right_border=0 x=6 y=1 content="|">
<case x=0 y=2 content="1"><case x=1 y=2 content="2"><case x=2 y=2 content="3"><case x=3 y=2 content="4"><case x=4 y=2 content="5"><case x=5 y=2 content="..."><case x=6 y=2 content="x + 1">
</table>

<p>
Ce terme est souvent confondu avec celui de fonction.
En réalité, <span class="important">une fonction représente une application, où il est possible qu'un élément de l'ensemble de départ n'ait pas d'image</span>.
En général, le terme de fonction est utilisé dans le cadre de nombres numérique (ou d'ensembles de nombres numériques).
Il est aussi très commun de définir une fonction avec la transformation associée à cette fonction, nommée l'expression de la fonction (par exemple "3x + 2").
Cependant, dans les deux cas, ce n'est pas obligatoire de fournir une expression (bien que très abstrait).
</p>

<table title="Fonction (mais pas application) de N vers N">
<case x=0 y=0 content="0"><case x=1 y=0 content="1"><case x=2 y=0 content="2"><case x=3 y=0 content="3"><case x=4 y=0 content="4"><case x=5 y=0 content="..."><case x=6 y=0 content="x">
<case right_border=0 x=1 y=1 content="|"><case right_border=0 x=2 y=1 content="|"><case right_border=0 x=3 y=1 content="|"><case right_border=0 x=4 y=1 content="|"><case right_border=0 x=5 y=1 content="|"><case right_border=0 x=6 y=1 content="|">
<case x=0 y=2 content="Rien"><case x=1 y=2 content="0"><case x=2 y=2 content="1"><case x=3 y=2 content="2"><case x=4 y=2 content="3"><case x=5 y=2 content="..."><case x=6 y=2 content="x - 1">
</table>

<p>
Il est possible de représenter des applications de pleins de façons possibles.
La forme la plus connues pour les fonctions numériques est le graphe d'application (ou graphe de fonction, si l'on parle de fonction).
<span class="important">Le graphe d'application numérique est une représentation graphique présentant les liens entre l'ensemble de définition est l'ensemble d'arrivée</span>.
Dans le cas de nombre seul (comme pour l'ensemble des réels), on représente en abscisse et en ordonné la droite des réels, et on note les points où le lien entre éléments a lieu.
C'est... la façon compliquée de définir une fonction tracée dans un graphique.
</p>

<graphic>
<background_color white>
<function expression="x/3+2"></function>
</graphic>

<p>
Selon la façon dont son formés les liens, l'application peut avoir plusieurs propriétés intéressantes.
<span class="important">Si chaque antécédent admet au maximum 1 antécédent, la fonction est dite injective</span>.
Tous les antécédents ont donc des images différentes, mais pas toutes les images ont forcément un antécédent.
<span class="important">Si chaque antécédent admet au minimum 1 antécédent, la fonction est dite surjective</span>.
Ici, deux antécédents peuvent avoir la même image.
Finalement, <span class="important">si chaque antécédent admet exactement une image, la fonction est dite bijective</span>.
C'est un renforcement de l'injectivité : toutes les images ont ici un antécédent.
D'ailleurs, dans ce cas là, il existe une application inverse, avec comme ensemble de départ l'ensemble d'arrivée de l'application de départ, et comme ensemble d'arrivée l'ensemble de départ de l'application de départ.
Les liens, eux, ne changent pas.
</span class="important">Cette application est dite réciproque à l'application de départ</span>.
</p>

<table title="Application injective de N vers N">
<case x=0 y=0 content="Rien"><case x=1 y=0 content="0"><case x=2 y=0 content="1"><case x=3 y=0 content="2"><case x=4 y=0 content="3"><case x=5 y=0 content="..."><case x=6 y=0 content="x">
<case right_border=0 x=1 y=1 content="|"><case right_border=0 x=2 y=1 content="|"><case right_border=0 x=3 y=1 content="|"><case right_border=0 x=4 y=1 content="|"><case right_border=0 x=5 y=1 content="|"><case right_border=0 x=6 y=1 content="|">
<case x=0 y=2 content="0"><case x=1 y=2 content="1"><case x=2 y=2 content="2"><case x=3 y=2 content="3"><case x=4 y=2 content="4"><case x=5 y=2 content="..."><case x=6 y=2 content="x + 1">
</table></br>

<table title="Application surjective de N vers N">
<case x=0 y=0 content="0"><case x=1 y=0 content="1"><case x=2 y=0 content="2"><case x=3 y=0 content="3"><case x=4 y=0 content="4"><case x=5 y=0 content="..."><case x=6 y=0 content="x">
<case right_border=0 x=0 y=1 content="|"><case right_border=0 x=1 y=1 content="|"><case right_border=0 x=2 y=1 content="|"><case right_border=0 x=3 y=1 content="|"><case right_border=0 x=4 y=1 content="|"><case right_border=0 x=5 y=1 content="|"><case right_border=0 x=6 y=1 content="|">
<case x=0 y=2 content="0"><case x=1 y=2 content="0"><case x=2 y=2 content="1"><case x=3 y=2 content="1"><case x=4 y=2 content="2"><case x=5 y=2 content="..."><case x=6 y=2 content="x // 2">
</table></br>

<table title="Application bijective de N vers N*">
<case x=0 y=0 content="0"><case x=1 y=0 content="1"><case x=2 y=0 content="2"><case x=3 y=0 content="3"><case x=4 y=0 content="4"><case x=5 y=0 content="..."><case x=6 y=0 content="x">
<case right_border=0 x=0 y=1 content="|"><case right_border=0 x=1 y=1 content="|"><case right_border=0 x=2 y=1 content="|"><case right_border=0 x=3 y=1 content="|"><case right_border=0 x=4 y=1 content="|"><case right_border=0 x=5 y=1 content="|"><case right_border=0 x=6 y=1 content="|">
<case x=0 y=2 content="1"><case x=1 y=2 content="2"><case x=2 y=2 content="3"><case x=3 y=2 content="4"><case x=4 y=2 content="5"><case x=5 y=2 content="..."><case x=6 y=2 content="x + 1">
</table>

<h3>Les relations d'équivalences</h3>

<p>
Le concept de relation d'équivalence est un concept peu expliqué, car considéré comme évident, bien qu'il ne le soit pas tant que ça.
<span class="important"><definition name="equivalence_relation"></span>.
Ce concept s'utilise avec celui de classe d'équivalence.
<span class="important"><definition name="equivalence_class"></span>.
Cependant, il est à noter que une classe d'équivalence peut être défini avec comme élément de départ n'importe quel élément de la base, en restant parfaitement égale.
</p>

<table load="cartesian_product;parity" title="Même parité entre deux entiers (deux pairs / impairs)"></table>

<p>
D'un point de vue très rigoureux (comme, par exemple, la définition donnée sur <a href="https://fr.wikipedia.org/wiki/Relation_d'%C3%A9quivalence">Wikipédia</a>), une relation d'équivalence est une relation binaire réflexive, symétrique et translative.
Bien que ces mots semblent compliqués, ils représentent en réalité des concepts très simples.
En mathématiques, <span class="important"><definition name="binary_relation"></span>.
En mots très simples, c'est une relation entre deux éléments seulement.
De plus, <span class="important"><definition name="relation_reflexivity"></span>.
En terme mathématique pure, <definition name="relation_reflexivity-symbols">.
Par exemple, pour la relation "distance à 0", "x" a la même distance à 0 que... "x" (très évident dans ce cas).
En suite, <span class="important"><definition name="relation_symetrical"></span>.
C'est une propriété plus syntaxique qu'autre chose : <definition name="relation_reflexivity-symbols">.
Finalement, <span class="important"><definition name="relation_transitivity"></span>.
C'est la "relation de Chasles" du concept, <definition name="relation_transitivity-symbols">.
</p>

<h3>Les ensembles quotient</h3>
<p>
Dans une certaine mesure, l'opération quotient est définie pour les ensembles, en utilisant le concept de relation d'équivalence.
<span class="important"><definition name="quotient_set"></span>.
Pour mieux comprendre cette définition, prenons l'exemple le plus connu : la congruence (et le modulo) en arithmétique.
Pour rappel, <definition name="arithmetic_congruence">.
Dans ce cas, <span class="important">on peut définir une relation d'équivalence entre chaque congruences possibles (de 0 à "n - 1"), et utiliser cette relation pour créer l'ensemble quotient</span>.
Voici une représentation de ce que cela peut représenter (chaque couleur représente une classe différente) :
</p>

<table title="Relation pour le modulo 4">
    <case x=0 y=0 content="0"><case x=1 y=0 content="1" background_color=(255,200,200)><case x=2 y=0 content="2" background_color=(200,255,200)><case x=3 y=0 content="3" background_color=(200,200,255)>
    <case x=0 y=1 content="4"><case x=1 y=1 content="5" background_color=(255,200,200)><case x=2 y=1 content="6" background_color=(200,255,200)><case x=3 y=1 content="7" background_color=(200,200,255)>
    <case x=0 y=2 content="8"><case x=1 y=2 content="9" background_color=(255,200,200)><case x=2 y=2 content="10" background_color=(200,255,200)><case x=3 y=2 content="11" background_color=(200,200,255)>
    <case x=0 y=3 content="12"><case x=1 y=3 content="13" background_color=(255,200,200)><case x=2 y=3 content="14" background_color=(200,255,200)><case x=3 y=3 content="15" background_color=(200,200,255)>
    <case x=0 y=4 content="4n"><case x=1 y=4 content="4n + 1" background_color=(255,200,200)><case x=2 y=4 content="4n + 2" background_color=(200,255,200)><case x=3 y=4 content="4n + 3" background_color=(200,200,255)>
</table>